Session Overview
----------------
a) Jenkins Installation
b) Freestyle job
c) Pipeline job
d) Pipeline structure
e) Options
f) Master agent architecture
g) Parameters
h) Post section


In Jenkins everything is treated as a job.
a) trigger the job 
b) Pre Build (Setting Build Environment comes under Pre Build)
c) Build
d) Post Build

Freestyle means login into the console and doing our required job.

freestyle disadvantages (disadvantage when we do through console)
-----------------------------------------------------------------
1. anyone can login and do the changes, difficult to track what went wrong
2. difficult to restore
3. I can't see the history, no versions

scripted way
-------------
1. review can be done before do something.
2. easy to restore
3. track the changes
4. maintains the history

Now, most of the people are opting for pipeline jobs not through freestyle jobs.

1 acre --> 1 person do
100 acres -> He employs resources

distributing the work to diff resources...

Jenkins is a master node.

install agents and distribute the pipelines to the agents...

Agent-1 --> windows environment
Agent-2 --> Mac environment
Agent-3 --> Chrome environment

master and slave (Before)
master and node (Agent) architecture (Now)

1. when work is there, master calls agent and ask them to do work
2. daily agent comes to master and ask if there is any work

agent should have java jdk kit installed in order to work
/var/lib/jenkins/ is the home folder of jenkins

ec2-user DevOps321

15min to create application artifact zip/jar

1hr 15min --> application success  (use timeout(time: 30, unit: 'MINUTES') to set time limit)

when one person is performing something on the application, others should stop (use disableConcurrentBuilds() Function)

steps {
                echo "Hello ${params.PERSON}"

                echo "Biography: ${params.BIOGRAPHY}"

                echo "Toggle: ${params.TOGGLE}"

                echo "Choice: ${params.CHOICE}"

                echo "Password: ${params.PASSWORD}"
            }
			
How to configure github to jenkins webhook

system-1 something happend, we need to inform system-2  (Example ATM Withdrawl System to SMS System)
when events those can be notified.

when developer pushed code to github, we need to trigger the pipeline

pipeline{
	agent{
		label 'java-agent'
	}
	options{
		timeout(time: 30, unit: 'MINUTES')
	}
	environment{
		Greeting = 'Hello World'
	}
	parameters{
	
	}
	stages{
		stage('Build'){
			steps{
				sh 'echo this is build'
			}
		}
		stage('Test'){
			steps{
				sh 'echo this is build'
			}
		}
	}
	post{
		always{
		
		}
		success{
		
		}
		failure{
		
		}
	}
}

post section is after stages section