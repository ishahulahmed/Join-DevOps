Recap
----------

pwd, cd, clear, history
ls
cat
cp mv
cut awk
curl wget
vim
chmod
grep
head
tail
touch

command-name <options> <inputs>
-l, --list (either use -l or --list) (if sigle charachter as option then use one hypen. if more than one charachter as option then use double hypen)
-a, --all  (either use -a or --all) (if sigle charachter as option use one hypen. if more than one charachter as option then use double hypen)
here -l, --list, -a, --all are options

cp command will not work without inputs
for few commands inputs is mandatory for few not mandatory like ls command.

User management
--------------------
if there is a server and multiple users need to access it then  
we need to create multiple user accounts
employees will join teams and exit teams that's a continous process. instead of creating permissions separately for each user.
we create groups/teams we add users to the group...
only administrative team will have root access to server others will login as normal users.

useradd <user-name>

useradd ramesh
useradd: Permission denied. (normal user cannot add another user they should have admin access i.e root access)

sudo su (su is super-user) (if you use sudo su then it will be in folder where used sudo su command)
if you were in /tmp folder then if you use sudo su then it will land in the same folder
pwd
/home/ec2-user or /tmp wherever you were there at the time of usings
with root access if you type cd and enter it's default location is /root


sudo su - (if you use sudo su - then it's landing location will be /root and when you exit this mode it will go back to the folder where you were)
pwd
/root


/root --> landing location of root user. (if you use sudo su -)
sudo su -

with root access you can create user
useradd ramesh

id <user-name> --> userid, user-name

id ramesh (to check whether a user is added or not(=)
uid=1002(ramesh) gid=1002(ramesh) groups=1002(ramesh)


in linux, when you create user, by default a group will be created with same user-name

/etc/passwd --> will have users info
cat /etc/passwd --> will show you all the users list in that specific server.

getent group --> will have group info (here group only not group name) (no need cat just type getend group)

i have created a user ramesh but to give his password

passwd <user-name>
passwd ramesh
it will prompt for new password and re-type password then it will update it successfully
passwd ramesh
passwd: Only root can specify a user name. (root access need to update or add password)
username should not be in password it is a recommendation not a rule.

here, we have added a user and given a password to him. how can this user login?
till now we have used key based authentication, pub and private key

if you want to change this behaviour 
/etc/ssh/sshd_config --> SSH configuration (this is SSH configuration file)

vim /etc/ssh/sshd_config
PasswordAuthentication yes (no users can login to server using password)

sshd -t (To check if there is any error in sshd configuration file)
(use this command from any where sshd -t not only in /etc/ssh/) (if no error it will not show anything)

if i wrote wantedly fdfh like something in sshd_config file then type sshd -t you will get error
/etc/ssh/sshd_confg: line 63: Bad configuration option: fdfhPasswordAuthentication
/etc/ssh/sshd_confg: terminating, 1 bad configuration options

if you made any changes in sshd file then check once with sshd -t command before logging out to the server. if there is bad configuration you cannot login again due to bad configuration. if it is only password based no other alternative.

if you made any changes then you need to restart that particular service. here sshd service.
systemctl restart sshd

now admin will inform ramesh. his user is created and send him ip-address and username and password. 
now ramesh will take gitbash since it not key based. he will login with password
ssh ramesh@3.89.28.201
ramesh@3.89.28.201's password: input-password
your successfully login.
[ ramesh@ip-172-31-37-108 ~ ]$ pwd
/home/ramesh

he is in his home folder /home/ramesh

id ramesh
uid=1002(ramesh) gid=1002(ramesh) groups=1002(ramesh)

linux will have two groups
gid=1002(ramesh) --> primary group
groups=1002(ramesh) --> secondary or supplementary group

i want to create a group devops
groupadd devops

getent group (you can see list of groups)

I want to add ramesh to devops group..

usermod -g devops ramesh -> adding ramesh to devops group as primary (-g is for primary group)

id ramesh
uid=1002(ramesh) gid=1003(devops) groups=1003(devops)


linux should have only 1 primary group, can have multiple secondary groups

for example i want to give ramesh temporarily access to testing team, he has to do some testing related activities.
there will be a group called testing...

groupadd testing (here we are create a group called testing. since it is not there in our server)

usermod -aG testing ramesh (-a for append. G for Secondary group) (adding ramesh to testing group temporarily)

id ramesh
uid=1002(ramesh) gid=1003(devops) groups=1003(devops),1004(testing) (here testing also added as secondary group)

now, ramesh had done his testing related activities
gpasswd -d ramesh testing --> deleting ramesh user from testing group..

id ramesh
uid=1002(ramesh) gid=1003(devops) groups=1003(devops) (testing group removed)


you can't remove primary group of linux user, you can only change/modify

when you create a user his username only be his primary-group and secondary-group
when you change primary group his secondary group will also be same.

usermod -g testing ramesh

id ramesh
uid=1002(ramesh) gid=1004(testing) groups=1004(testing)

now, if you try to remove ramesh from testing secondary group

gpasswd -d ramesh testing
Removing user ramesh from group testing
gpasswd: user 'ramesh' is not a member of 'testing'

id ramesh
uid=1002(ramesh) gid=1004(testing) groups=1004(testing)

until testing is there a primary group you cannot remove secondary group testing as well. you can add other secondary groups and remove them but not this secondary group which is also a primary.

CRUD Operation
---------------
create user --> useradd 
read user --> id or cat /etc/passwd
modify user --> usermod -g or -aG <group-name> <user-name>
delete user

when employee leaving organisation
----------------------------------
delete the user

Process to delete a user
--------------------------
1. remove user from group
2. delete the user

ramesh --> testing (ramesh primary group we have changed to testing)
userdel ramesh --> ramesh will be removed? what about ramesh group created by default.

1. remove all his secondary groups
2. change primary group to his own group.
3. then delete the user

userdel ramesh
userdel: group ramesh not removed because it is not the primary group of user ramesh.

getent group --> you will see ramesh group so you have delete the group manaully

groupdel ramesh (to delete group ramesh)

Proper Way to delete a User let us take another example
--------------------------------------------------------
Raheem Joined our Organisation
------------------------------
useradd raheem
id raheem
uid=1002(raheem) gid=1002(raheem) groups=1002(raheem)
usermod -g devops raheem
id raheem
uid=1002(raheem) gid=1003(devops) groups=1003(devops)
usermod -aG testing raheem
id raheem
uid=1002(raheem) gid=1003(devops) groups=1003(devops) ,1004(testing)

Raheem leaving our organisation
--------------------------------
gpasswd -d raheem testing
id raheem
uid=1002(raheem) gid=1003(devops) groups=1003(devops)
usermod -g raheem raheem
id raheem
uid=1002(raheem) gid=1002(raheem) groups=1002(raheem)
userdel raheem

now, there is no user raheem and group raheem

Till now, we have seen user password authentication. what if a new user have to login with his private key?
------------------------------------------------------------------------------------------------------------
now i am going to create robert user with key based authentication. 

as i said every user will have their own public and private key.

when robert join the company he will create his own pubic and private key.
ssh-keygen -t rsa -b 4096 -f robert

robert will send his public key to the adminstrative team. through email.


robert public given to administrative team
-------------------------------------------
ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQCUAgROf/YdViSjcvCk5kKWjWaq7wNReWuZpR8qo1QbOqduON+MnHEZ6ygYgF5K5QhXjp6FXetEU+54MStMvUaw6/C7mDhN3t6aQH2+J1lT3ezhekrUOG0+y7u1m3QYZ96rUSUSDiabXq/Vjorx44ggHRuWxZzKqb2Kpj4zH/B0qLQ2LoiklILzf/peCJqNCSq0dLMEFX+JXtH3aAoKlm0k0IBA4zMTF82+UOfgT/+zHPfzBPoo7k4AvaX2KJ5+k27pwqrtMEOvX0w+GguIQ78Ukj5YWW8DVsHzaf5HsLCeZ9W3CB+fTvDnKbchpnUpHDlQnaekgNqMv4B485TUyxjgOmwq2Fw8/ZvEZUe0J9kY1wphfqlv4QtxMCPsI85soi+QIRiPEAxKL6fomSXHMQIDSBl2ddOpnApC9Wwpe5jfhIFG4jtB/q2aHm1IDbrAW6o9S6Y+mqtJ5eCkLDpQIBIODpBzws/hmiciCy42kQFgJ/cgnRtr868EkK4xJec/98p2L0E9z6qZgjyrPkeAlDedAOKFUwjyjneUNDt+f6U3dBl+oeRtAEQOSuozkN+DGzB49KN55fXf6GIeajFM6973SPtXISyyRonHpPptl8dPWoWvIKMIK3TnssHkrPKXsGdDC0NRF2d9Wt7KcD6TbJHsgov+4RMenF/aRr6GUwxFaw== shahu@Shahuls-Laptop

now administrative team will add this key to linux server.
useradd robert --> we have i.e admin team created user robert which means home folder /home/robert is also created.
cd /home/robert/
ls -la
mkdir .ssh (in user home folder there should be .ssh folder for ssh authentication purpose)
ls -la
drwxr-xr-x  2 root   root     6 Sep  2 12:40 .ssh (here permission should only be to robert not even to his group)
chmod -R 700 .ssh
ls -la
drwx------  2 root   root     6 Sep  2 12:40 .ssh (here we have given permissions only to user. no access to groups and others)
cd .ssh
touch authorized_keys (in this authorized_keys we will place robert's public key without any mistakes or new line) (this is purely linux admin activity)
vim authorized_keys (paste your public key and save)
chmod 400 authorized_keys (do not give more than rw i.e 600 even to user)

R 4
W 2 
X 1

here, we took public-key from robert. went into his home-folder create a folder named .ssh. we created a file named authorized_keys and pasted public-key content in it.

now, everything is ready permission have be set correctly. but still robert cannot log-in using ssh because ownership of .ssh folder is showing root.
cd /home/robert
ls -la
drwx------  2 root   root    29 Sep  2 12:46 .ssh

permission on a file or folder is different from ownership.
command to change ownership
chown <user>:<group>
chown -R robert:robert .ssh (-R for recursive to include all files inside the folder)

chown -R rober:robert .ssh

ls -la
drwx------  2 robert robert  29 Sep  2 12:46 .ssh 

now, this folder only robert has access no other has access. inside this folder
cd .ssh
ls -la
drwx------ 2 robert robert  29 Sep  2 12:46 .
drwx------ 3 robert robert  74 Sep  2 12:40 ..
-r-------- 1 robert robert 746 Sep  2 12:46 authorized_keys

inside, this folder also only robert has access that too only read access he cannot even change the key. if lost his private key. he will send request to administrator. 

let, us see now whether robert is able to login or not.
go to the path were robert private key is located then 
ssh -i robert robert@3.89.28.201

robert, is now able to sucessfully login.

in projects there might be key based authentication or password based authentication. generally there will be azure active directory with centralised login using SSO (Single Sign-On).
When we join a company for our laptop they will give a username and password. so, in company whatever you open the same will be your username and password. with that username and password they will integrate linux-servers. so, there is some centralised management that is called IAM. [not aws iam here]

here, for robert i want to give sudo access
admin will with root access in server
vim /etc/sudoers
## Allow root to run any commands anywhere
root    ALL=(ALL)     ALL
robert  ALL=(ALL)     ALL

so, in this file whose names are there they will get sudo access.

let, us see whether robert is able to use root access
ssh -i robert robert@3.89.28.201

package management
----------------------
in linux, one package may be depends on another package. olden days we have rpm

rpm we have to manually get the dependencies, install them and finally main package..

yum --> automatic dependencies management

yum install git -y

/etc/yum.repos.d --> location of package URL's

yum list installed --> installed packages
yum list all --> all packages for this linux server
available = all - installed

cat /proc/cpuinfo
cat /proc/meminfo
cat /etc/os-release --> cat /etc/*release
yum update

service management
---------------------
0-65,535 ports = 65,536

SSH 22

ssh -i <private-key> user@ip

IP address, server will check is there any service running on port 22. then it will forward request to ssh

ssh servie will check credentials, if success login

Delhi --> Mumbai

if flat no, letter will stuck at security

systemctl start nginx
systemctl status nginx
systemctl stop nginx
systemctl restart nginx
systemctl enable nginx

enable --> if a service is enabled, even after restarting the server that service automatically start...

process management, network management, linux folder structure

DNS
facebook.com --> 11.45.67.89

https://facebook.com:567
47:10
